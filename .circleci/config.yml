# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

variables:
  # Download and cache dependencies
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{
          checksum ".circleci/common.sh" }}-{{
          checksum ".circleci/setup.sh" }}-{{
          checksum ".circleci/config.yml" }}-{{
          checksum "environment.yml" }}-{{
          arch }}
        # fallback to using the latest cache if no exact match is found
        #- v1-dependencies-
  save_cache: &save_cache
    save_cache:
      paths:
        - miniconda
      key: v1-dependencies-{{
        checksum ".circleci/common.sh" }}-{{
        checksum ".circleci/setup.sh" }}-{{
        checksum ".circleci/config.yml" }}-{{
        checksum "environment.yml" }}-{{
        arch }}
        #v1-dependencies-{{ checksum "requirements.txt" }}
  common: &common
    run:
      name: Download common definitions
      command : curl -s https://raw.githubusercontent.com/dmontemayor/crpm-common/master/common.sh > .circleci/common.sh
  setup: &setup
    run:
      name: Setup dependencies
      command: .circleci/setup.sh
  integration_test: &integration_test
    run:
      name: Run integration tests
      command: integration.sh
  #macos: &macos
  #  macos:
  #    xcode: "8.3.3"
  #linux: &linux
  #  machine: true
  install_crpm: &install_crpm
    run:
      name: Install crpm
      command: python setup.py install


jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - *common
      - *restore_cache
      - *setup
      - *save_cache
      - *install_crpm
      - *integration_test
      - store_artifacts:
          path: test-reports
          destination: test-reports
